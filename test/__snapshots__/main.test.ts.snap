// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
{
  "Outputs": {
    "DemoClusterConfigCommandFF969510": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws eks update-kubeconfig --name ",
            {
              "Ref": "DemoCluster38441829",
            },
            " --region ",
            {
              "Ref": "AWS::Region",
            },
            " --role-arn ",
            {
              "Fn::GetAtt": [
                "DemoClusterMastersRoleAFB55B87",
                "Arn",
              ],
            },
          ],
        ],
      },
    },
    "DemoClusterGetTokenCommand27D195FA": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "aws eks get-token --cluster-name ",
            {
              "Ref": "DemoCluster38441829",
            },
            " --region ",
            {
              "Ref": "AWS::Region",
            },
            " --role-arn ",
            {
              "Fn::GetAtt": [
                "DemoClusterMastersRoleAFB55B87",
                "Arn",
              ],
            },
          ],
        ],
      },
    },
    "DemoCodeCommitCloneUrlHttp8110DB84": {
      "Value": {
        "Fn::GetAtt": [
          "DemoCodeCommitRepo0DD21DC2",
          "CloneUrlHttp",
        ],
      },
    },
    "DemoCodeCommitCloneUrlSsh3FC28E78": {
      "Value": {
        "Fn::GetAtt": [
          "DemoCodeCommitRepo0DD21DC2",
          "CloneUrlSsh",
        ],
      },
    },
    "DemoCodeCommitRepoArnA87270C7": {
      "Value": {
        "Fn::GetAtt": [
          "DemoCodeCommitRepo0DD21DC2",
          "Arn",
        ],
      },
    },
    "DemoCodeCommitRepoName35983F42": {
      "Value": {
        "Fn::GetAtt": [
          "DemoCodeCommitRepo0DD21DC2",
          "Name",
        ],
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "DemoCluster38441829": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "DemoClusterCreationRoleDefaultPolicy5FA9659F",
        "DemoClusterCreationRole8978C51F",
        "DemoVpcIGW4CCD8DC2",
        "DemoVpcPrivateSubnet1DefaultRoute88DBC596",
        "DemoVpcPrivateSubnet1RouteTable0882FEB1",
        "DemoVpcPrivateSubnet1RouteTableAssociation810E5915",
        "DemoVpcPrivateSubnet1Subnet44F848DB",
        "DemoVpcPrivateSubnet2DefaultRouteCE36B950",
        "DemoVpcPrivateSubnet2RouteTable40B6F8E2",
        "DemoVpcPrivateSubnet2RouteTableAssociation625EC3BF",
        "DemoVpcPrivateSubnet2Subnet2CBBAF70",
        "DemoVpcPublicSubnet1DefaultRoute9F0A2508",
        "DemoVpcPublicSubnet1EIP504508F1",
        "DemoVpcPublicSubnet1NATGateway1792712A",
        "DemoVpcPublicSubnet1RouteTable7E6F7541",
        "DemoVpcPublicSubnet1RouteTableAssociationB6894BAD",
        "DemoVpcPublicSubnet1SubnetF3653284",
        "DemoVpcPublicSubnet2DefaultRoute61C7597A",
        "DemoVpcPublicSubnet2RouteTableCAAA2786",
        "DemoVpcPublicSubnet2RouteTableAssociation2BD8C06E",
        "DemoVpcPublicSubnet2Subnet95D7A6DB",
        "DemoVpc45BBFD6B",
        "DemoVpcVPCGWFC8D4299",
      ],
      "Properties": {
        "AssumeRoleArn": {
          "Fn::GetAtt": [
            "DemoClusterCreationRole8978C51F",
            "Arn",
          ],
        },
        "AttributesRevision": 2,
        "Config": {
          "resourcesVpcConfig": {
            "endpointPrivateAccess": true,
            "endpointPublicAccess": true,
            "securityGroupIds": [
              {
                "Fn::GetAtt": [
                  "DemoClusterControlPlaneSecurityGroup6BA5AFA1",
                  "GroupId",
                ],
              },
            ],
            "subnetIds": [
              {
                "Ref": "DemoVpcPublicSubnet1SubnetF3653284",
              },
              {
                "Ref": "DemoVpcPublicSubnet2Subnet95D7A6DB",
              },
              {
                "Ref": "DemoVpcPrivateSubnet1Subnet44F848DB",
              },
              {
                "Ref": "DemoVpcPrivateSubnet2Subnet2CBBAF70",
              },
            ],
          },
          "roleArn": {
            "Fn::GetAtt": [
              "DemoClusterRoleCBE40445",
              "Arn",
            ],
          },
          "version": "1.20",
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
            "Outputs.testawscdkawseksClusterResourceProviderframeworkonEvent05C9E6FDArn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-Cluster",
      "UpdateReplacePolicy": "Delete",
    },
    "DemoClusterAwsAuthmanifest3A2B9945": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "DemoClusterKubectlReadyBarrier6E436B52",
      ],
      "Properties": {
        "ClusterName": {
          "Ref": "DemoCluster38441829",
        },
        "Manifest": {
          "Fn::Join": [
            "",
            [
              "[{"apiVersion":"v1","kind":"ConfigMap","metadata":{"name":"aws-auth","namespace":"kube-system","labels":{"aws.cdk.eks/prune-c8361663721d22f1f12c04c68f105b1a9f5aecea58":""}},"data":{"mapRoles":"[{\\"rolearn\\":\\"",
              {
                "Fn::GetAtt": [
                  "DemoClusterMastersRoleAFB55B87",
                  "Arn",
                ],
              },
              "\\",\\"username\\":\\"",
              {
                "Fn::GetAtt": [
                  "DemoClusterMastersRoleAFB55B87",
                  "Arn",
                ],
              },
              "\\",\\"groups\\":[\\"system:masters\\"]},{\\"rolearn\\":\\"",
              {
                "Fn::GetAtt": [
                  "DemoClusterNodegroupDefaultCapacityNodeGroupRoleE7B25248",
                  "Arn",
                ],
              },
              "\\",\\"username\\":\\"system:node:{{EC2PrivateDNSName}}\\",\\"groups\\":[\\"system:bootstrappers\\",\\"system:nodes\\"]},{\\"rolearn\\":\\"",
              {
                "Fn::GetAtt": [
                  "DemoMyProjectRoleC858C671",
                  "Arn",
                ],
              },
              "\\",\\"username\\":\\"",
              {
                "Fn::GetAtt": [
                  "DemoMyProjectRoleC858C671",
                  "Arn",
                ],
              },
              "\\",\\"groups\\":[\\"system:masters\\"]}]","mapUsers":"[]","mapAccounts":"[]"}}]",
            ],
          ],
        },
        "Overwrite": true,
        "PruneLabel": "aws.cdk.eks/prune-c8361663721d22f1f12c04c68f105b1a9f5aecea58",
        "RoleArn": {
          "Fn::GetAtt": [
            "DemoClusterCreationRole8978C51F",
            "Arn",
          ],
        },
        "ServiceToken": {
          "Fn::GetAtt": [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.testawscdkawseksKubectlProviderframeworkonEvent99848F43Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "DemoClusterControlPlaneSecurityGroup6BA5AFA1": {
      "Properties": {
        "GroupDescription": "EKS Control Plane Security Group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": {
          "Ref": "DemoVpc45BBFD6B",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "DemoClusterCreationRole8978C51F": {
      "DependsOn": [
        "DemoVpcIGW4CCD8DC2",
        "DemoVpcPrivateSubnet1DefaultRoute88DBC596",
        "DemoVpcPrivateSubnet1RouteTable0882FEB1",
        "DemoVpcPrivateSubnet1RouteTableAssociation810E5915",
        "DemoVpcPrivateSubnet1Subnet44F848DB",
        "DemoVpcPrivateSubnet2DefaultRouteCE36B950",
        "DemoVpcPrivateSubnet2RouteTable40B6F8E2",
        "DemoVpcPrivateSubnet2RouteTableAssociation625EC3BF",
        "DemoVpcPrivateSubnet2Subnet2CBBAF70",
        "DemoVpcPublicSubnet1DefaultRoute9F0A2508",
        "DemoVpcPublicSubnet1EIP504508F1",
        "DemoVpcPublicSubnet1NATGateway1792712A",
        "DemoVpcPublicSubnet1RouteTable7E6F7541",
        "DemoVpcPublicSubnet1RouteTableAssociationB6894BAD",
        "DemoVpcPublicSubnet1SubnetF3653284",
        "DemoVpcPublicSubnet2DefaultRoute61C7597A",
        "DemoVpcPublicSubnet2RouteTableCAAA2786",
        "DemoVpcPublicSubnet2RouteTableAssociation2BD8C06E",
        "DemoVpcPublicSubnet2Subnet95D7A6DB",
        "DemoVpc45BBFD6B",
        "DemoVpcVPCGWFC8D4299",
      ],
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DemoClusterCreationRoleDefaultPolicy5FA9659F": {
      "DependsOn": [
        "DemoVpcIGW4CCD8DC2",
        "DemoVpcPrivateSubnet1DefaultRoute88DBC596",
        "DemoVpcPrivateSubnet1RouteTable0882FEB1",
        "DemoVpcPrivateSubnet1RouteTableAssociation810E5915",
        "DemoVpcPrivateSubnet1Subnet44F848DB",
        "DemoVpcPrivateSubnet2DefaultRouteCE36B950",
        "DemoVpcPrivateSubnet2RouteTable40B6F8E2",
        "DemoVpcPrivateSubnet2RouteTableAssociation625EC3BF",
        "DemoVpcPrivateSubnet2Subnet2CBBAF70",
        "DemoVpcPublicSubnet1DefaultRoute9F0A2508",
        "DemoVpcPublicSubnet1EIP504508F1",
        "DemoVpcPublicSubnet1NATGateway1792712A",
        "DemoVpcPublicSubnet1RouteTable7E6F7541",
        "DemoVpcPublicSubnet1RouteTableAssociationB6894BAD",
        "DemoVpcPublicSubnet1SubnetF3653284",
        "DemoVpcPublicSubnet2DefaultRoute61C7597A",
        "DemoVpcPublicSubnet2RouteTableCAAA2786",
        "DemoVpcPublicSubnet2RouteTableAssociation2BD8C06E",
        "DemoVpcPublicSubnet2Subnet95D7A6DB",
        "DemoVpc45BBFD6B",
        "DemoVpcVPCGWFC8D4299",
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DemoClusterRoleCBE40445",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "eks:CreateCluster",
                "eks:DescribeCluster",
                "eks:DescribeUpdate",
                "eks:DeleteCluster",
                "eks:UpdateClusterVersion",
                "eks:UpdateClusterConfig",
                "eks:CreateFargateProfile",
                "eks:TagResource",
                "eks:UntagResource",
              ],
              "Effect": "Allow",
              "Resource": [
                "*",
              ],
            },
            {
              "Action": [
                "eks:DescribeFargateProfile",
                "eks:DeleteFargateProfile",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "iam:GetRole",
                "iam:listAttachedRolePolicies",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": "iam:CreateServiceLinkedRole",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "ec2:DescribeInstances",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeRouteTables",
                "ec2:DescribeDhcpOptions",
                "ec2:DescribeVpcs",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DemoClusterCreationRoleDefaultPolicy5FA9659F",
        "Roles": [
          {
            "Ref": "DemoClusterCreationRole8978C51F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DemoClusterKubectlReadyBarrier6E436B52": {
      "DependsOn": [
        "DemoClusterCreationRoleDefaultPolicy5FA9659F",
        "DemoClusterCreationRole8978C51F",
        "DemoCluster38441829",
      ],
      "Properties": {
        "Type": "String",
        "Value": "aws:cdk:eks:kubectl-ready",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "DemoClusterMastersRoleAFB55B87": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DemoClusterNodegroupDefaultCapacity6094D612": {
      "Properties": {
        "AmiType": "AL2_x86_64",
        "ClusterName": {
          "Ref": "DemoCluster38441829",
        },
        "ForceUpdateEnabled": true,
        "InstanceTypes": [
          "m5.large",
        ],
        "NodeRole": {
          "Fn::GetAtt": [
            "DemoClusterNodegroupDefaultCapacityNodeGroupRoleE7B25248",
            "Arn",
          ],
        },
        "ScalingConfig": {
          "DesiredSize": 2,
          "MaxSize": 2,
          "MinSize": 2,
        },
        "Subnets": [
          {
            "Ref": "DemoVpcPrivateSubnet1Subnet44F848DB",
          },
          {
            "Ref": "DemoVpcPrivateSubnet2Subnet2CBBAF70",
          },
        ],
      },
      "Type": "AWS::EKS::Nodegroup",
    },
    "DemoClusterNodegroupDefaultCapacityNodeGroupRoleE7B25248": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "ec2.",
                      {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy",
              ],
            ],
          },
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DemoClusterRoleCBE40445": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "eks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSClusterPolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DemoCodeCommitRepo0DD21DC2": {
      "Properties": {
        "RepositoryName": "test-repo",
      },
      "Type": "AWS::CodeCommit::Repository",
    },
    "DemoCodeCommitRepoOnCommitD69605C8": {
      "Properties": {
        "EventPattern": {
          "detail": {
            "event": [
              "referenceCreated",
              "referenceUpdated",
            ],
          },
          "detail-type": [
            "CodeCommit Repository State Change",
          ],
          "resources": [
            {
              "Fn::GetAtt": [
                "DemoCodeCommitRepo0DD21DC2",
                "Arn",
              ],
            },
          ],
          "source": [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "DemoMyProject9BD63FB6",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RoleArn": {
              "Fn::GetAtt": [
                "DemoMyProjectEventsRole4995FFE7",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "DemoEcrRepo2DA11D32": {
      "DeletionPolicy": "Retain",
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "DemoMyProject9BD63FB6": {
      "Properties": {
        "Artifacts": {
          "Type": "NO_ARTIFACTS",
        },
        "Cache": {
          "Type": "NO_CACHE",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": [
            {
              "Name": "CLUSTER_NAME",
              "Type": "PLAINTEXT",
              "Value": {
                "Ref": "DemoCluster38441829",
              },
            },
            {
              "Name": "ECR_REPO_URI",
              "Type": "PLAINTEXT",
              "Value": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::Select": [
                        4,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Fn::GetAtt": [
                                "DemoEcrRepo2DA11D32",
                                "Arn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    ".dkr.ecr.",
                    {
                      "Fn::Select": [
                        3,
                        {
                          "Fn::Split": [
                            ":",
                            {
                              "Fn::GetAtt": [
                                "DemoEcrRepo2DA11D32",
                                "Arn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    ".",
                    {
                      "Ref": "AWS::URLSuffix",
                    },
                    "/",
                    {
                      "Ref": "DemoEcrRepo2DA11D32",
                    },
                  ],
                ],
              },
            },
          ],
          "Image": {
            "Fn::Sub": "\${AWS::AccountId}.dkr.ecr.\${AWS::Region}.\${AWS::URLSuffix}/cdk-hnb659fds-container-assets-\${AWS::AccountId}-\${AWS::Region}:8d51351cd3070bbd026f269fb20440c029ef75acb4a5c07f148135f707510426",
          },
          "ImagePullCredentialsType": "SERVICE_ROLE",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER",
        },
        "Name": "test",
        "ServiceRole": {
          "Fn::GetAtt": [
            "DemoMyProjectRoleC858C671",
            "Arn",
          ],
        },
        "Source": {
          "BuildSpec": "{
  "version": "0.2",
  "phases": {
    "pre_build": {
      "commands": [
        "env",
        "export TAG=\${CODEBUILD_RESOLVED_SOURCE_VERSION}",
        "export AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output=text)",
        "/usr/local/bin/entrypoint.sh",
        "echo Logging in to Amazon ECR",
        "aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com"
      ]
    },
    "build": {
      "commands": [
        "cd flask-docker-app",
        "docker build -t $ECR_REPO_URI:$TAG .",
        "docker push $ECR_REPO_URI:$TAG"
      ]
    },
    "post_build": {
      "commands": [
        "kubectl get no",
        "kubectl set image deployment flask-deployment flask=$ECR_REPO_URI:$TAG"
      ]
    }
  }
}",
          "Location": {
            "Fn::GetAtt": [
              "DemoCodeCommitRepo0DD21DC2",
              "CloneUrlHttp",
            ],
          },
          "Type": "CODECOMMIT",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "DemoMyProjectEventsRole4995FFE7": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DemoMyProjectEventsRoleDefaultPolicyE280CB8C": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "codebuild:StartBuild",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DemoMyProject9BD63FB6",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DemoMyProjectEventsRoleDefaultPolicyE280CB8C",
        "Roles": [
          {
            "Ref": "DemoMyProjectEventsRole4995FFE7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DemoMyProjectRoleC858C671": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DemoMyProjectRoleDefaultPolicyFF36F40B": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "codecommit:GitPull",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DemoCodeCommitRepo0DD21DC2",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":repository/",
                    {
                      "Fn::Sub": "cdk-hnb659fds-container-assets-\${AWS::AccountId}-\${AWS::Region}",
                    },
                  ],
                ],
              },
            },
            {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "DemoMyProject9BD63FB6",
                      },
                    ],
                  ],
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "DemoMyProject9BD63FB6",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    {
                      "Ref": "DemoMyProject9BD63FB6",
                    },
                    "-*",
                  ],
                ],
              },
            },
            {
              "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DemoEcrRepo2DA11D32",
                  "Arn",
                ],
              },
            },
            {
              "Action": [
                "ecr:PutImage",
                "ecr:InitiateLayerUpload",
                "ecr:UploadLayerPart",
                "ecr:CompleteLayerUpload",
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DemoEcrRepo2DA11D32",
                  "Arn",
                ],
              },
            },
            {
              "Action": "eks:DescribeCluster",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "DemoCluster38441829",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DemoMyProjectRoleDefaultPolicyFF36F40B",
        "Roles": [
          {
            "Ref": "DemoMyProjectRoleC858C671",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DemoVpc45BBFD6B": {
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Demo/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "DemoVpcIGW4CCD8DC2": {
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "test/Demo/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "DemoVpcPrivateSubnet1DefaultRoute88DBC596": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "DemoVpcPublicSubnet1NATGateway1792712A",
        },
        "RouteTableId": {
          "Ref": "DemoVpcPrivateSubnet1RouteTable0882FEB1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "DemoVpcPrivateSubnet1RouteTable0882FEB1": {
      "Properties": {
        "Tags": [
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          {
            "Key": "Name",
            "Value": "test/Demo/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "DemoVpc45BBFD6B",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "DemoVpcPrivateSubnet1RouteTableAssociation810E5915": {
      "Properties": {
        "RouteTableId": {
          "Ref": "DemoVpcPrivateSubnet1RouteTable0882FEB1",
        },
        "SubnetId": {
          "Ref": "DemoVpcPrivateSubnet1Subnet44F848DB",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "DemoVpcPrivateSubnet1Subnet44F848DB": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.128.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          {
            "Key": "Name",
            "Value": "test/Demo/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "DemoVpc45BBFD6B",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "DemoVpcPrivateSubnet2DefaultRouteCE36B950": {
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "DemoVpcPublicSubnet1NATGateway1792712A",
        },
        "RouteTableId": {
          "Ref": "DemoVpcPrivateSubnet2RouteTable40B6F8E2",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "DemoVpcPrivateSubnet2RouteTable40B6F8E2": {
      "Properties": {
        "Tags": [
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          {
            "Key": "Name",
            "Value": "test/Demo/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "DemoVpc45BBFD6B",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "DemoVpcPrivateSubnet2RouteTableAssociation625EC3BF": {
      "Properties": {
        "RouteTableId": {
          "Ref": "DemoVpcPrivateSubnet2RouteTable40B6F8E2",
        },
        "SubnetId": {
          "Ref": "DemoVpcPrivateSubnet2Subnet2CBBAF70",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "DemoVpcPrivateSubnet2Subnet2CBBAF70": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.192.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          {
            "Key": "Name",
            "Value": "test/Demo/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "DemoVpc45BBFD6B",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "DemoVpcPublicSubnet1DefaultRoute9F0A2508": {
      "DependsOn": [
        "DemoVpcVPCGWFC8D4299",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "DemoVpcIGW4CCD8DC2",
        },
        "RouteTableId": {
          "Ref": "DemoVpcPublicSubnet1RouteTable7E6F7541",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "DemoVpcPublicSubnet1EIP504508F1": {
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          {
            "Key": "Name",
            "Value": "test/Demo/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "DemoVpcPublicSubnet1NATGateway1792712A": {
      "DependsOn": [
        "DemoVpcPublicSubnet1DefaultRoute9F0A2508",
        "DemoVpcPublicSubnet1RouteTableAssociationB6894BAD",
      ],
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "DemoVpcPublicSubnet1EIP504508F1",
            "AllocationId",
          ],
        },
        "SubnetId": {
          "Ref": "DemoVpcPublicSubnet1SubnetF3653284",
        },
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          {
            "Key": "Name",
            "Value": "test/Demo/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "DemoVpcPublicSubnet1RouteTable7E6F7541": {
      "Properties": {
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          {
            "Key": "Name",
            "Value": "test/Demo/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "DemoVpc45BBFD6B",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "DemoVpcPublicSubnet1RouteTableAssociationB6894BAD": {
      "Properties": {
        "RouteTableId": {
          "Ref": "DemoVpcPublicSubnet1RouteTable7E6F7541",
        },
        "SubnetId": {
          "Ref": "DemoVpcPublicSubnet1SubnetF3653284",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "DemoVpcPublicSubnet1SubnetF3653284": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          {
            "Key": "Name",
            "Value": "test/Demo/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": {
          "Ref": "DemoVpc45BBFD6B",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "DemoVpcPublicSubnet2DefaultRoute61C7597A": {
      "DependsOn": [
        "DemoVpcVPCGWFC8D4299",
      ],
      "Properties": {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "DemoVpcIGW4CCD8DC2",
        },
        "RouteTableId": {
          "Ref": "DemoVpcPublicSubnet2RouteTableCAAA2786",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "DemoVpcPublicSubnet2RouteTableAssociation2BD8C06E": {
      "Properties": {
        "RouteTableId": {
          "Ref": "DemoVpcPublicSubnet2RouteTableCAAA2786",
        },
        "SubnetId": {
          "Ref": "DemoVpcPublicSubnet2Subnet95D7A6DB",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "DemoVpcPublicSubnet2RouteTableCAAA2786": {
      "Properties": {
        "Tags": [
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          {
            "Key": "Name",
            "Value": "test/Demo/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "DemoVpc45BBFD6B",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "DemoVpcPublicSubnet2Subnet95D7A6DB": {
      "Properties": {
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.64.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          {
            "Key": "Name",
            "Value": "test/Demo/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": {
          "Ref": "DemoVpc45BBFD6B",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "DemoVpcVPCGWFC8D4299": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "DemoVpcIGW4CCD8DC2",
        },
        "VpcId": {
          "Ref": "DemoVpc45BBFD6B",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454": {
      "DeletionPolicy": "Delete",
      "Properties": {
        "Parameters": {
          "referencetotestDemoClusterCreationRole0D51DF83Arn": {
            "Fn::GetAtt": [
              "DemoClusterCreationRole8978C51F",
              "Arn",
            ],
          },
        },
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://s3.",
              {
                "Ref": "AWS::Region",
              },
              ".",
              {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              {
                "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
              },
              "/f50c5d2b9dfc9b2af4efa1ae4a43b450748c8472acc82f930129c826f51cf13b.json",
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
      "UpdateReplacePolicy": "Delete",
    },
    "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "DemoVpcPrivateSubnet1DefaultRoute88DBC596",
        "DemoVpcPrivateSubnet1RouteTableAssociation810E5915",
        "DemoVpcPrivateSubnet2DefaultRouteCE36B950",
        "DemoVpcPrivateSubnet2RouteTableAssociation625EC3BF",
      ],
      "Properties": {
        "Parameters": {
          "referencetotestDemoClusterCreationRole0D51DF83Arn": {
            "Fn::GetAtt": [
              "DemoClusterCreationRole8978C51F",
              "Arn",
            ],
          },
          "referencetotestDemoClusterF24AB9FFArn": {
            "Fn::GetAtt": [
              "DemoCluster38441829",
              "Arn",
            ],
          },
          "referencetotestDemoClusterF24AB9FFClusterSecurityGroupId": {
            "Fn::GetAtt": [
              "DemoCluster38441829",
              "ClusterSecurityGroupId",
            ],
          },
          "referencetotestDemoVpcPrivateSubnet1SubnetE9725D30Ref": {
            "Ref": "DemoVpcPrivateSubnet1Subnet44F848DB",
          },
          "referencetotestDemoVpcPrivateSubnet2Subnet0F383055Ref": {
            "Ref": "DemoVpcPrivateSubnet2Subnet2CBBAF70",
          },
        },
        "TemplateURL": {
          "Fn::Join": [
            "",
            [
              "https://s3.",
              {
                "Ref": "AWS::Region",
              },
              ".",
              {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              {
                "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
              },
              "/80184505f268c13403f7adff072c3f1fef2c65587cd6c8f13bd844d20d5dd7a3.json",
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
      "UpdateReplacePolicy": "Delete",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
