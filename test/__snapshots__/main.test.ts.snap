// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Snapshot 1`] = `
Object {
  "Outputs": Object {
    "DemoClusterConfigCommandFF969510": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "aws eks update-kubeconfig --name ",
            Object {
              "Ref": "DemoCluster38441829",
            },
            " --region ",
            Object {
              "Ref": "AWS::Region",
            },
            " --role-arn ",
            Object {
              "Fn::GetAtt": Array [
                "DemoClusterMastersRoleAFB55B87",
                "Arn",
              ],
            },
          ],
        ],
      },
    },
    "DemoClusterGetTokenCommand27D195FA": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "aws eks get-token --cluster-name ",
            Object {
              "Ref": "DemoCluster38441829",
            },
            " --region ",
            Object {
              "Ref": "AWS::Region",
            },
            " --role-arn ",
            Object {
              "Fn::GetAtt": Array [
                "DemoClusterMastersRoleAFB55B87",
                "Arn",
              ],
            },
          ],
        ],
      },
    },
    "DemoCodeCommitCloneUrlHttp8110DB84": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "DemoCodeCommitRepo0DD21DC2",
          "CloneUrlHttp",
        ],
      },
    },
    "DemoCodeCommitCloneUrlSsh3FC28E78": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "DemoCodeCommitRepo0DD21DC2",
          "CloneUrlSsh",
        ],
      },
    },
    "DemoCodeCommitRepoArnA87270C7": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "DemoCodeCommitRepo0DD21DC2",
          "Arn",
        ],
      },
    },
    "DemoCodeCommitRepoName35983F42": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "DemoCodeCommitRepo0DD21DC2",
          "Name",
        ],
      },
    },
  },
  "Parameters": Object {
    "AssetParameters206e0798c6b784b3d5d10a880b6d8ccbf8b537b46183812758023e47eb1aaa3fArtifactHash266383C1": Object {
      "Description": "Artifact hash for asset \\"206e0798c6b784b3d5d10a880b6d8ccbf8b537b46183812758023e47eb1aaa3f\\"",
      "Type": "String",
    },
    "AssetParameters206e0798c6b784b3d5d10a880b6d8ccbf8b537b46183812758023e47eb1aaa3fS3Bucket0317CB85": Object {
      "Description": "S3 bucket for asset \\"206e0798c6b784b3d5d10a880b6d8ccbf8b537b46183812758023e47eb1aaa3f\\"",
      "Type": "String",
    },
    "AssetParameters206e0798c6b784b3d5d10a880b6d8ccbf8b537b46183812758023e47eb1aaa3fS3VersionKey4A892419": Object {
      "Description": "S3 key for asset version \\"206e0798c6b784b3d5d10a880b6d8ccbf8b537b46183812758023e47eb1aaa3f\\"",
      "Type": "String",
    },
    "AssetParameters26ac61b4195cccf80ff73f332788ad7ffaab36d81ce570340a583a8364901665ArtifactHash9EA5AC29": Object {
      "Description": "Artifact hash for asset \\"26ac61b4195cccf80ff73f332788ad7ffaab36d81ce570340a583a8364901665\\"",
      "Type": "String",
    },
    "AssetParameters26ac61b4195cccf80ff73f332788ad7ffaab36d81ce570340a583a8364901665S3Bucket1B280681": Object {
      "Description": "S3 bucket for asset \\"26ac61b4195cccf80ff73f332788ad7ffaab36d81ce570340a583a8364901665\\"",
      "Type": "String",
    },
    "AssetParameters26ac61b4195cccf80ff73f332788ad7ffaab36d81ce570340a583a8364901665S3VersionKeyB1E02791": Object {
      "Description": "S3 key for asset version \\"26ac61b4195cccf80ff73f332788ad7ffaab36d81ce570340a583a8364901665\\"",
      "Type": "String",
    },
    "AssetParameters4129bbca38164ecb28fee8e5b674f0d05e5957b4b8ed97d9c950527b5cc4ce10ArtifactHash528547CD": Object {
      "Description": "Artifact hash for asset \\"4129bbca38164ecb28fee8e5b674f0d05e5957b4b8ed97d9c950527b5cc4ce10\\"",
      "Type": "String",
    },
    "AssetParameters4129bbca38164ecb28fee8e5b674f0d05e5957b4b8ed97d9c950527b5cc4ce10S3BucketC6FAEEC9": Object {
      "Description": "S3 bucket for asset \\"4129bbca38164ecb28fee8e5b674f0d05e5957b4b8ed97d9c950527b5cc4ce10\\"",
      "Type": "String",
    },
    "AssetParameters4129bbca38164ecb28fee8e5b674f0d05e5957b4b8ed97d9c950527b5cc4ce10S3VersionKeyA7EE7421": Object {
      "Description": "S3 key for asset version \\"4129bbca38164ecb28fee8e5b674f0d05e5957b4b8ed97d9c950527b5cc4ce10\\"",
      "Type": "String",
    },
    "AssetParameters78e65e3f133b14ef9513ebd5d6ece1f224e10d23ecca4e0a8408b7a00c956d9eArtifactHash1753A8BB": Object {
      "Description": "Artifact hash for asset \\"78e65e3f133b14ef9513ebd5d6ece1f224e10d23ecca4e0a8408b7a00c956d9e\\"",
      "Type": "String",
    },
    "AssetParameters78e65e3f133b14ef9513ebd5d6ece1f224e10d23ecca4e0a8408b7a00c956d9eS3Bucket82143E5F": Object {
      "Description": "S3 bucket for asset \\"78e65e3f133b14ef9513ebd5d6ece1f224e10d23ecca4e0a8408b7a00c956d9e\\"",
      "Type": "String",
    },
    "AssetParameters78e65e3f133b14ef9513ebd5d6ece1f224e10d23ecca4e0a8408b7a00c956d9eS3VersionKeyB45C64F9": Object {
      "Description": "S3 key for asset version \\"78e65e3f133b14ef9513ebd5d6ece1f224e10d23ecca4e0a8408b7a00c956d9e\\"",
      "Type": "String",
    },
    "AssetParametersaa417b9073765a3bea6f13c9f810b7a8b342bfae384f894ea1686b5a96db26c5ArtifactHash3EDFDAA1": Object {
      "Description": "Artifact hash for asset \\"aa417b9073765a3bea6f13c9f810b7a8b342bfae384f894ea1686b5a96db26c5\\"",
      "Type": "String",
    },
    "AssetParametersaa417b9073765a3bea6f13c9f810b7a8b342bfae384f894ea1686b5a96db26c5S3BucketDCF2C5E6": Object {
      "Description": "S3 bucket for asset \\"aa417b9073765a3bea6f13c9f810b7a8b342bfae384f894ea1686b5a96db26c5\\"",
      "Type": "String",
    },
    "AssetParametersaa417b9073765a3bea6f13c9f810b7a8b342bfae384f894ea1686b5a96db26c5S3VersionKey14A74995": Object {
      "Description": "S3 key for asset version \\"aa417b9073765a3bea6f13c9f810b7a8b342bfae384f894ea1686b5a96db26c5\\"",
      "Type": "String",
    },
    "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cArtifactHash627DAAA7": Object {
      "Description": "Artifact hash for asset \\"c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c\\"",
      "Type": "String",
    },
    "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketEAC9DD43": Object {
      "Description": "S3 bucket for asset \\"c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c\\"",
      "Type": "String",
    },
    "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7": Object {
      "Description": "S3 key for asset version \\"c691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49c\\"",
      "Type": "String",
    },
    "AssetParameterse9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68ArtifactHashD9A515C3": Object {
      "Description": "Artifact hash for asset \\"e9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68\\"",
      "Type": "String",
    },
    "AssetParameterse9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68S3BucketAEADE8C7": Object {
      "Description": "S3 bucket for asset \\"e9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68\\"",
      "Type": "String",
    },
    "AssetParameterse9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68S3VersionKeyE415415F": Object {
      "Description": "S3 key for asset version \\"e9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68\\"",
      "Type": "String",
    },
    "AssetParametersea17febe6d04c66048f3e8e060c71685c0cb53122abceff44842d27bc0d4a03eArtifactHash4654D012": Object {
      "Description": "Artifact hash for asset \\"ea17febe6d04c66048f3e8e060c71685c0cb53122abceff44842d27bc0d4a03e\\"",
      "Type": "String",
    },
    "AssetParametersea17febe6d04c66048f3e8e060c71685c0cb53122abceff44842d27bc0d4a03eS3BucketD3288998": Object {
      "Description": "S3 bucket for asset \\"ea17febe6d04c66048f3e8e060c71685c0cb53122abceff44842d27bc0d4a03e\\"",
      "Type": "String",
    },
    "AssetParametersea17febe6d04c66048f3e8e060c71685c0cb53122abceff44842d27bc0d4a03eS3VersionKeyB00C0565": Object {
      "Description": "S3 key for asset version \\"ea17febe6d04c66048f3e8e060c71685c0cb53122abceff44842d27bc0d4a03e\\"",
      "Type": "String",
    },
  },
  "Resources": Object {
    "DemoCluster38441829": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "DemoClusterCreationRoleDefaultPolicy5FA9659F",
        "DemoClusterCreationRole8978C51F",
        "DemoVpcIGW4CCD8DC2",
        "DemoVpcPrivateSubnet1DefaultRoute88DBC596",
        "DemoVpcPrivateSubnet1RouteTable0882FEB1",
        "DemoVpcPrivateSubnet1RouteTableAssociation810E5915",
        "DemoVpcPrivateSubnet1Subnet44F848DB",
        "DemoVpcPrivateSubnet2DefaultRouteCE36B950",
        "DemoVpcPrivateSubnet2RouteTable40B6F8E2",
        "DemoVpcPrivateSubnet2RouteTableAssociation625EC3BF",
        "DemoVpcPrivateSubnet2Subnet2CBBAF70",
        "DemoVpcPublicSubnet1DefaultRoute9F0A2508",
        "DemoVpcPublicSubnet1EIP504508F1",
        "DemoVpcPublicSubnet1NATGateway1792712A",
        "DemoVpcPublicSubnet1RouteTable7E6F7541",
        "DemoVpcPublicSubnet1RouteTableAssociationB6894BAD",
        "DemoVpcPublicSubnet1SubnetF3653284",
        "DemoVpcPublicSubnet2DefaultRoute61C7597A",
        "DemoVpcPublicSubnet2RouteTableCAAA2786",
        "DemoVpcPublicSubnet2RouteTableAssociation2BD8C06E",
        "DemoVpcPublicSubnet2Subnet95D7A6DB",
        "DemoVpc45BBFD6B",
        "DemoVpcVPCGWFC8D4299",
      ],
      "Properties": Object {
        "AssumeRoleArn": Object {
          "Fn::GetAtt": Array [
            "DemoClusterCreationRole8978C51F",
            "Arn",
          ],
        },
        "AttributesRevision": 2,
        "Config": Object {
          "resourcesVpcConfig": Object {
            "endpointPrivateAccess": true,
            "endpointPublicAccess": true,
            "securityGroupIds": Array [
              Object {
                "Fn::GetAtt": Array [
                  "DemoClusterControlPlaneSecurityGroup6BA5AFA1",
                  "GroupId",
                ],
              },
            ],
            "subnetIds": Array [
              Object {
                "Ref": "DemoVpcPublicSubnet1SubnetF3653284",
              },
              Object {
                "Ref": "DemoVpcPublicSubnet2Subnet95D7A6DB",
              },
              Object {
                "Ref": "DemoVpcPrivateSubnet1Subnet44F848DB",
              },
              Object {
                "Ref": "DemoVpcPrivateSubnet2Subnet2CBBAF70",
              },
            ],
          },
          "roleArn": Object {
            "Fn::GetAtt": Array [
              "DemoClusterRoleCBE40445",
              "Arn",
            ],
          },
          "version": "1.20",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454",
            "Outputs.testawscdkawseksClusterResourceProviderframeworkonEvent05C9E6FDArn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-Cluster",
      "UpdateReplacePolicy": "Delete",
    },
    "DemoClusterAwsAuthmanifest3A2B9945": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "DemoClusterKubectlReadyBarrier6E436B52",
      ],
      "Properties": Object {
        "ClusterName": Object {
          "Ref": "DemoCluster38441829",
        },
        "Manifest": Object {
          "Fn::Join": Array [
            "",
            Array [
              "[{\\"apiVersion\\":\\"v1\\",\\"kind\\":\\"ConfigMap\\",\\"metadata\\":{\\"name\\":\\"aws-auth\\",\\"namespace\\":\\"kube-system\\",\\"labels\\":{\\"aws.cdk.eks/prune-c8361663721d22f1f12c04c68f105b1a9f5aecea58\\":\\"\\"}},\\"data\\":{\\"mapRoles\\":\\"[{\\\\\\"rolearn\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "DemoClusterMastersRoleAFB55B87",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"username\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "DemoClusterMastersRoleAFB55B87",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:masters\\\\\\"]},{\\\\\\"rolearn\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "DemoClusterNodegroupDefaultCapacityNodeGroupRoleE7B25248",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"username\\\\\\":\\\\\\"system:node:{{EC2PrivateDNSName}}\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:bootstrappers\\\\\\",\\\\\\"system:nodes\\\\\\"]},{\\\\\\"rolearn\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "DemoMyProjectRoleC858C671",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"username\\\\\\":\\\\\\"",
              Object {
                "Fn::GetAtt": Array [
                  "DemoMyProjectRoleC858C671",
                  "Arn",
                ],
              },
              "\\\\\\",\\\\\\"groups\\\\\\":[\\\\\\"system:masters\\\\\\"]}]\\",\\"mapUsers\\":\\"[]\\",\\"mapAccounts\\":\\"[]\\"}}]",
            ],
          ],
        },
        "Overwrite": true,
        "PruneLabel": "aws.cdk.eks/prune-c8361663721d22f1f12c04c68f105b1a9f5aecea58",
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "DemoClusterCreationRole8978C51F",
            "Arn",
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B",
            "Outputs.testawscdkawseksKubectlProviderframeworkonEvent99848F43Arn",
          ],
        },
      },
      "Type": "Custom::AWSCDK-EKS-KubernetesResource",
      "UpdateReplacePolicy": "Delete",
    },
    "DemoClusterControlPlaneSecurityGroup6BA5AFA1": Object {
      "Properties": Object {
        "GroupDescription": "EKS Control Plane Security Group",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "DemoVpc45BBFD6B",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "DemoClusterCreationRole8978C51F": Object {
      "DependsOn": Array [
        "DemoVpcIGW4CCD8DC2",
        "DemoVpcPrivateSubnet1DefaultRoute88DBC596",
        "DemoVpcPrivateSubnet1RouteTable0882FEB1",
        "DemoVpcPrivateSubnet1RouteTableAssociation810E5915",
        "DemoVpcPrivateSubnet1Subnet44F848DB",
        "DemoVpcPrivateSubnet2DefaultRouteCE36B950",
        "DemoVpcPrivateSubnet2RouteTable40B6F8E2",
        "DemoVpcPrivateSubnet2RouteTableAssociation625EC3BF",
        "DemoVpcPrivateSubnet2Subnet2CBBAF70",
        "DemoVpcPublicSubnet1DefaultRoute9F0A2508",
        "DemoVpcPublicSubnet1EIP504508F1",
        "DemoVpcPublicSubnet1NATGateway1792712A",
        "DemoVpcPublicSubnet1RouteTable7E6F7541",
        "DemoVpcPublicSubnet1RouteTableAssociationB6894BAD",
        "DemoVpcPublicSubnet1SubnetF3653284",
        "DemoVpcPublicSubnet2DefaultRoute61C7597A",
        "DemoVpcPublicSubnet2RouteTableCAAA2786",
        "DemoVpcPublicSubnet2RouteTableAssociation2BD8C06E",
        "DemoVpcPublicSubnet2Subnet95D7A6DB",
        "DemoVpc45BBFD6B",
        "DemoVpcVPCGWFC8D4299",
      ],
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DemoClusterCreationRoleDefaultPolicy5FA9659F": Object {
      "DependsOn": Array [
        "DemoVpcIGW4CCD8DC2",
        "DemoVpcPrivateSubnet1DefaultRoute88DBC596",
        "DemoVpcPrivateSubnet1RouteTable0882FEB1",
        "DemoVpcPrivateSubnet1RouteTableAssociation810E5915",
        "DemoVpcPrivateSubnet1Subnet44F848DB",
        "DemoVpcPrivateSubnet2DefaultRouteCE36B950",
        "DemoVpcPrivateSubnet2RouteTable40B6F8E2",
        "DemoVpcPrivateSubnet2RouteTableAssociation625EC3BF",
        "DemoVpcPrivateSubnet2Subnet2CBBAF70",
        "DemoVpcPublicSubnet1DefaultRoute9F0A2508",
        "DemoVpcPublicSubnet1EIP504508F1",
        "DemoVpcPublicSubnet1NATGateway1792712A",
        "DemoVpcPublicSubnet1RouteTable7E6F7541",
        "DemoVpcPublicSubnet1RouteTableAssociationB6894BAD",
        "DemoVpcPublicSubnet1SubnetF3653284",
        "DemoVpcPublicSubnet2DefaultRoute61C7597A",
        "DemoVpcPublicSubnet2RouteTableCAAA2786",
        "DemoVpcPublicSubnet2RouteTableAssociation2BD8C06E",
        "DemoVpcPublicSubnet2Subnet95D7A6DB",
        "DemoVpc45BBFD6B",
        "DemoVpcVPCGWFC8D4299",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DemoClusterRoleCBE40445",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "eks:CreateCluster",
                "eks:DescribeCluster",
                "eks:DescribeUpdate",
                "eks:DeleteCluster",
                "eks:UpdateClusterVersion",
                "eks:UpdateClusterConfig",
                "eks:CreateFargateProfile",
                "eks:TagResource",
                "eks:UntagResource",
              ],
              "Effect": "Allow",
              "Resource": Array [
                "*",
              ],
            },
            Object {
              "Action": Array [
                "eks:DescribeFargateProfile",
                "eks:DeleteFargateProfile",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "iam:GetRole",
                "iam:listAttachedRolePolicies",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "iam:CreateServiceLinkedRole",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "ec2:DescribeInstances",
                "ec2:DescribeNetworkInterfaces",
                "ec2:DescribeSecurityGroups",
                "ec2:DescribeSubnets",
                "ec2:DescribeRouteTables",
                "ec2:DescribeDhcpOptions",
                "ec2:DescribeVpcs",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DemoClusterCreationRoleDefaultPolicy5FA9659F",
        "Roles": Array [
          Object {
            "Ref": "DemoClusterCreationRole8978C51F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DemoClusterKubectlReadyBarrier6E436B52": Object {
      "DependsOn": Array [
        "DemoClusterCreationRoleDefaultPolicy5FA9659F",
        "DemoClusterCreationRole8978C51F",
        "DemoCluster38441829",
      ],
      "Properties": Object {
        "Type": "String",
        "Value": "aws:cdk:eks:kubectl-ready",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "DemoClusterMastersRoleAFB55B87": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DemoClusterNodegroupDefaultCapacity6094D612": Object {
      "Properties": Object {
        "AmiType": "AL2_x86_64",
        "ClusterName": Object {
          "Ref": "DemoCluster38441829",
        },
        "ForceUpdateEnabled": true,
        "InstanceTypes": Array [
          "m5.large",
        ],
        "NodeRole": Object {
          "Fn::GetAtt": Array [
            "DemoClusterNodegroupDefaultCapacityNodeGroupRoleE7B25248",
            "Arn",
          ],
        },
        "ScalingConfig": Object {
          "DesiredSize": 2,
          "MaxSize": 2,
          "MinSize": 2,
        },
        "Subnets": Array [
          Object {
            "Ref": "DemoVpcPrivateSubnet1Subnet44F848DB",
          },
          Object {
            "Ref": "DemoVpcPrivateSubnet2Subnet2CBBAF70",
          },
        ],
      },
      "Type": "AWS::EKS::Nodegroup",
    },
    "DemoClusterNodegroupDefaultCapacityNodeGroupRoleE7B25248": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "ec2.",
                      Object {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSWorkerNodePolicy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKS_CNI_Policy",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEC2ContainerRegistryReadOnly",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DemoClusterRoleCBE40445": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "eks.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/AmazonEKSClusterPolicy",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DemoCodeCommitRepo0DD21DC2": Object {
      "Properties": Object {
        "RepositoryName": "test-repo",
      },
      "Type": "AWS::CodeCommit::Repository",
    },
    "DemoCodeCommitRepoOnCommitD69605C8": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "event": Array [
              "referenceCreated",
              "referenceUpdated",
            ],
          },
          "detail-type": Array [
            "CodeCommit Repository State Change",
          ],
          "resources": Array [
            Object {
              "Fn::GetAtt": Array [
                "DemoCodeCommitRepo0DD21DC2",
                "Arn",
              ],
            },
          ],
          "source": Array [
            "aws.codecommit",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "DemoMyProject9BD63FB6",
                "Arn",
              ],
            },
            "Id": "Target0",
            "RoleArn": Object {
              "Fn::GetAtt": Array [
                "DemoMyProjectEventsRole4995FFE7",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "DemoEcrRepo2DA11D32": Object {
      "DeletionPolicy": "Retain",
      "Type": "AWS::ECR::Repository",
      "UpdateReplacePolicy": "Retain",
    },
    "DemoMyProject9BD63FB6": Object {
      "Properties": Object {
        "Artifacts": Object {
          "Type": "NO_ARTIFACTS",
        },
        "EncryptionKey": "alias/aws/s3",
        "Environment": Object {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "EnvironmentVariables": Array [
            Object {
              "Name": "CLUSTER_NAME",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Ref": "DemoCluster38441829",
              },
            },
            Object {
              "Name": "ECR_REPO_URI",
              "Type": "PLAINTEXT",
              "Value": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::Select": Array [
                        4,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Fn::GetAtt": Array [
                                "DemoEcrRepo2DA11D32",
                                "Arn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    ".dkr.ecr.",
                    Object {
                      "Fn::Select": Array [
                        3,
                        Object {
                          "Fn::Split": Array [
                            ":",
                            Object {
                              "Fn::GetAtt": Array [
                                "DemoEcrRepo2DA11D32",
                                "Arn",
                              ],
                            },
                          ],
                        },
                      ],
                    },
                    ".",
                    Object {
                      "Ref": "AWS::URLSuffix",
                    },
                    "/",
                    Object {
                      "Ref": "DemoEcrRepo2DA11D32",
                    },
                  ],
                ],
              },
            },
          ],
          "Image": Object {
            "Fn::Join": Array [
              "",
              Array [
                Object {
                  "Ref": "AWS::AccountId",
                },
                ".dkr.ecr.",
                Object {
                  "Ref": "AWS::Region",
                },
                ".",
                Object {
                  "Ref": "AWS::URLSuffix",
                },
                "/aws-cdk/assets:077cb2e535b04454043ad370e3821c6d90f96a66fe0d650e16ccc35876b12a4f",
              ],
            ],
          },
          "ImagePullCredentialsType": "SERVICE_ROLE",
          "PrivilegedMode": true,
          "Type": "LINUX_CONTAINER",
        },
        "Name": "test",
        "ServiceRole": Object {
          "Fn::GetAtt": Array [
            "DemoMyProjectRoleC858C671",
            "Arn",
          ],
        },
        "Source": Object {
          "BuildSpec": "{
  \\"version\\": \\"0.2\\",
  \\"phases\\": {
    \\"pre_build\\": {
      \\"commands\\": [
        \\"env\\",
        \\"export TAG=\${CODEBUILD_RESOLVED_SOURCE_VERSION}\\",
        \\"export AWS_ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output=text)\\",
        \\"/usr/local/bin/entrypoint.sh\\",
        \\"echo Logging in to Amazon ECR\\",
        \\"aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com\\"
      ]
    },
    \\"build\\": {
      \\"commands\\": [
        \\"cd flask-docker-app\\",
        \\"docker build -t $ECR_REPO_URI:$TAG .\\",
        \\"docker push $ECR_REPO_URI:$TAG\\"
      ]
    },
    \\"post_build\\": {
      \\"commands\\": [
        \\"kubectl get no\\",
        \\"kubectl set image deployment flask-deployment flask=$ECR_REPO_URI:$TAG\\"
      ]
    }
  }
}",
          "Location": Object {
            "Fn::GetAtt": Array [
              "DemoCodeCommitRepo0DD21DC2",
              "CloneUrlHttp",
            ],
          },
          "Type": "CODECOMMIT",
        },
      },
      "Type": "AWS::CodeBuild::Project",
    },
    "DemoMyProjectEventsRole4995FFE7": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DemoMyProjectEventsRoleDefaultPolicyE280CB8C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codebuild:StartBuild",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DemoMyProject9BD63FB6",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DemoMyProjectEventsRoleDefaultPolicyE280CB8C",
        "Roles": Array [
          Object {
            "Ref": "DemoMyProjectEventsRole4995FFE7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DemoMyProjectRoleC858C671": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "codebuild.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DemoMyProjectRoleDefaultPolicyFF36F40B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "codecommit:GitPull",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DemoCodeCommitRepo0DD21DC2",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ecr:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":repository/aws-cdk/assets",
                  ],
                ],
              },
            },
            Object {
              "Action": "ecr:GetAuthorizationToken",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "DemoMyProject9BD63FB6",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":logs:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":log-group:/aws/codebuild/",
                      Object {
                        "Ref": "DemoMyProject9BD63FB6",
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":codebuild:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":report-group/",
                    Object {
                      "Ref": "DemoMyProject9BD63FB6",
                    },
                    "-*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DemoEcrRepo2DA11D32",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "ecr:PutImage",
                "ecr:InitiateLayerUpload",
                "ecr:UploadLayerPart",
                "ecr:CompleteLayerUpload",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DemoEcrRepo2DA11D32",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "eks:DescribeCluster",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DemoCluster38441829",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DemoMyProjectRoleDefaultPolicyFF36F40B",
        "Roles": Array [
          Object {
            "Ref": "DemoMyProjectRoleC858C671",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DemoVpc45BBFD6B": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/Demo/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "DemoVpcIGW4CCD8DC2": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "test/Demo/Vpc",
          },
        ],
      },
      "Type": "AWS::EC2::InternetGateway",
    },
    "DemoVpcPrivateSubnet1DefaultRoute88DBC596": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "DemoVpcPublicSubnet1NATGateway1792712A",
        },
        "RouteTableId": Object {
          "Ref": "DemoVpcPrivateSubnet1RouteTable0882FEB1",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "DemoVpcPrivateSubnet1RouteTable0882FEB1": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "test/Demo/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "DemoVpc45BBFD6B",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "DemoVpcPrivateSubnet1RouteTableAssociation810E5915": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "DemoVpcPrivateSubnet1RouteTable0882FEB1",
        },
        "SubnetId": Object {
          "Ref": "DemoVpcPrivateSubnet1Subnet44F848DB",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "DemoVpcPrivateSubnet1Subnet44F848DB": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.128.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "test/Demo/Vpc/PrivateSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "DemoVpc45BBFD6B",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "DemoVpcPrivateSubnet2DefaultRouteCE36B950": Object {
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": Object {
          "Ref": "DemoVpcPublicSubnet1NATGateway1792712A",
        },
        "RouteTableId": Object {
          "Ref": "DemoVpcPrivateSubnet2RouteTable40B6F8E2",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "DemoVpcPrivateSubnet2RouteTable40B6F8E2": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "test/Demo/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "DemoVpc45BBFD6B",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "DemoVpcPrivateSubnet2RouteTableAssociation625EC3BF": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "DemoVpcPrivateSubnet2RouteTable40B6F8E2",
        },
        "SubnetId": Object {
          "Ref": "DemoVpcPrivateSubnet2Subnet2CBBAF70",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "DemoVpcPrivateSubnet2Subnet2CBBAF70": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.192.0/18",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Private",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private",
          },
          Object {
            "Key": "kubernetes.io/role/internal-elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "test/Demo/Vpc/PrivateSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "DemoVpc45BBFD6B",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "DemoVpcPublicSubnet1DefaultRoute9F0A2508": Object {
      "DependsOn": Array [
        "DemoVpcVPCGWFC8D4299",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "DemoVpcIGW4CCD8DC2",
        },
        "RouteTableId": Object {
          "Ref": "DemoVpcPublicSubnet1RouteTable7E6F7541",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "DemoVpcPublicSubnet1EIP504508F1": Object {
      "Properties": Object {
        "Domain": "vpc",
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "test/Demo/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::EIP",
    },
    "DemoVpcPublicSubnet1NATGateway1792712A": Object {
      "Properties": Object {
        "AllocationId": Object {
          "Fn::GetAtt": Array [
            "DemoVpcPublicSubnet1EIP504508F1",
            "AllocationId",
          ],
        },
        "SubnetId": Object {
          "Ref": "DemoVpcPublicSubnet1SubnetF3653284",
        },
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "test/Demo/Vpc/PublicSubnet1",
          },
        ],
      },
      "Type": "AWS::EC2::NatGateway",
    },
    "DemoVpcPublicSubnet1RouteTable7E6F7541": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "test/Demo/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "DemoVpc45BBFD6B",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "DemoVpcPublicSubnet1RouteTableAssociationB6894BAD": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "DemoVpcPublicSubnet1RouteTable7E6F7541",
        },
        "SubnetId": Object {
          "Ref": "DemoVpcPublicSubnet1SubnetF3653284",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "DemoVpcPublicSubnet1SubnetF3653284": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "test/Demo/Vpc/PublicSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "DemoVpc45BBFD6B",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "DemoVpcPublicSubnet2DefaultRoute61C7597A": Object {
      "DependsOn": Array [
        "DemoVpcVPCGWFC8D4299",
      ],
      "Properties": Object {
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": Object {
          "Ref": "DemoVpcIGW4CCD8DC2",
        },
        "RouteTableId": Object {
          "Ref": "DemoVpcPublicSubnet2RouteTableCAAA2786",
        },
      },
      "Type": "AWS::EC2::Route",
    },
    "DemoVpcPublicSubnet2RouteTableAssociation2BD8C06E": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "DemoVpcPublicSubnet2RouteTableCAAA2786",
        },
        "SubnetId": Object {
          "Ref": "DemoVpcPublicSubnet2Subnet95D7A6DB",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "DemoVpcPublicSubnet2RouteTableCAAA2786": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "test/Demo/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "DemoVpc45BBFD6B",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "DemoVpcPublicSubnet2Subnet95D7A6DB": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.64.0/18",
        "MapPublicIpOnLaunch": true,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Public",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public",
          },
          Object {
            "Key": "kubernetes.io/role/elb",
            "Value": "1",
          },
          Object {
            "Key": "Name",
            "Value": "test/Demo/Vpc/PublicSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "DemoVpc45BBFD6B",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "DemoVpcVPCGWFC8D4299": Object {
      "Properties": Object {
        "InternetGatewayId": Object {
          "Ref": "DemoVpcIGW4CCD8DC2",
        },
        "VpcId": Object {
          "Ref": "DemoVpc45BBFD6B",
        },
      },
      "Type": "AWS::EC2::VPCGatewayAttachment",
    },
    "awscdkawseksClusterResourceProviderNestedStackawscdkawseksClusterResourceProviderNestedStackResource9827C454": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Parameters": Object {
          "referencetotestAssetParameters26ac61b4195cccf80ff73f332788ad7ffaab36d81ce570340a583a8364901665S3Bucket1B454BA5Ref": Object {
            "Ref": "AssetParameters26ac61b4195cccf80ff73f332788ad7ffaab36d81ce570340a583a8364901665S3Bucket1B280681",
          },
          "referencetotestAssetParameters26ac61b4195cccf80ff73f332788ad7ffaab36d81ce570340a583a8364901665S3VersionKey04F98478Ref": Object {
            "Ref": "AssetParameters26ac61b4195cccf80ff73f332788ad7ffaab36d81ce570340a583a8364901665S3VersionKeyB1E02791",
          },
          "referencetotestAssetParametersaa417b9073765a3bea6f13c9f810b7a8b342bfae384f894ea1686b5a96db26c5S3Bucket55CB9E1BRef": Object {
            "Ref": "AssetParametersaa417b9073765a3bea6f13c9f810b7a8b342bfae384f894ea1686b5a96db26c5S3BucketDCF2C5E6",
          },
          "referencetotestAssetParametersaa417b9073765a3bea6f13c9f810b7a8b342bfae384f894ea1686b5a96db26c5S3VersionKey7F639E61Ref": Object {
            "Ref": "AssetParametersaa417b9073765a3bea6f13c9f810b7a8b342bfae384f894ea1686b5a96db26c5S3VersionKey14A74995",
          },
          "referencetotestAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketA4341268Ref": Object {
            "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketEAC9DD43",
          },
          "referencetotestAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyEB9BE0CARef": Object {
            "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7",
          },
          "referencetotestDemoClusterCreationRole0D51DF83Arn": Object {
            "Fn::GetAtt": Array [
              "DemoClusterCreationRole8978C51F",
              "Arn",
            ],
          },
        },
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.",
              Object {
                "Ref": "AWS::Region",
              },
              ".",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Ref": "AssetParameters78e65e3f133b14ef9513ebd5d6ece1f224e10d23ecca4e0a8408b7a00c956d9eS3Bucket82143E5F",
              },
              "/",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameters78e65e3f133b14ef9513ebd5d6ece1f224e10d23ecca4e0a8408b7a00c956d9eS3VersionKeyB45C64F9",
                      },
                    ],
                  },
                ],
              },
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameters78e65e3f133b14ef9513ebd5d6ece1f224e10d23ecca4e0a8408b7a00c956d9eS3VersionKeyB45C64F9",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
      "UpdateReplacePolicy": "Delete",
    },
    "awscdkawseksKubectlProviderNestedStackawscdkawseksKubectlProviderNestedStackResourceA7AEBA6B": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Parameters": Object {
          "referencetotestAssetParameters4129bbca38164ecb28fee8e5b674f0d05e5957b4b8ed97d9c950527b5cc4ce10S3Bucket06906E4FRef": Object {
            "Ref": "AssetParameters4129bbca38164ecb28fee8e5b674f0d05e5957b4b8ed97d9c950527b5cc4ce10S3BucketC6FAEEC9",
          },
          "referencetotestAssetParameters4129bbca38164ecb28fee8e5b674f0d05e5957b4b8ed97d9c950527b5cc4ce10S3VersionKeyB757DE12Ref": Object {
            "Ref": "AssetParameters4129bbca38164ecb28fee8e5b674f0d05e5957b4b8ed97d9c950527b5cc4ce10S3VersionKeyA7EE7421",
          },
          "referencetotestAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketA4341268Ref": Object {
            "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3BucketEAC9DD43",
          },
          "referencetotestAssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyEB9BE0CARef": Object {
            "Ref": "AssetParametersc691172cdeefa2c91b5a2907f9d81118e47597634943344795f1a844192dd49cS3VersionKeyDD9AE9E7",
          },
          "referencetotestAssetParameterse9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68S3Bucket185B8B61Ref": Object {
            "Ref": "AssetParameterse9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68S3BucketAEADE8C7",
          },
          "referencetotestAssetParameterse9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68S3VersionKeyA391A8AARef": Object {
            "Ref": "AssetParameterse9882ab123687399f934da0d45effe675ecc8ce13b40cb946f3e1d6141fe8d68S3VersionKeyE415415F",
          },
          "referencetotestAssetParametersea17febe6d04c66048f3e8e060c71685c0cb53122abceff44842d27bc0d4a03eS3Bucket37E5BA1ARef": Object {
            "Ref": "AssetParametersea17febe6d04c66048f3e8e060c71685c0cb53122abceff44842d27bc0d4a03eS3BucketD3288998",
          },
          "referencetotestAssetParametersea17febe6d04c66048f3e8e060c71685c0cb53122abceff44842d27bc0d4a03eS3VersionKeyB21841D1Ref": Object {
            "Ref": "AssetParametersea17febe6d04c66048f3e8e060c71685c0cb53122abceff44842d27bc0d4a03eS3VersionKeyB00C0565",
          },
          "referencetotestDemoClusterCreationRole0D51DF83Arn": Object {
            "Fn::GetAtt": Array [
              "DemoClusterCreationRole8978C51F",
              "Arn",
            ],
          },
          "referencetotestDemoClusterF24AB9FFArn": Object {
            "Fn::GetAtt": Array [
              "DemoCluster38441829",
              "Arn",
            ],
          },
          "referencetotestDemoClusterF24AB9FFClusterSecurityGroupId": Object {
            "Fn::GetAtt": Array [
              "DemoCluster38441829",
              "ClusterSecurityGroupId",
            ],
          },
          "referencetotestDemoVpcPrivateSubnet1SubnetE9725D30Ref": Object {
            "Ref": "DemoVpcPrivateSubnet1Subnet44F848DB",
          },
          "referencetotestDemoVpcPrivateSubnet2Subnet0F383055Ref": Object {
            "Ref": "DemoVpcPrivateSubnet2Subnet2CBBAF70",
          },
        },
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.",
              Object {
                "Ref": "AWS::Region",
              },
              ".",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Ref": "AssetParameters206e0798c6b784b3d5d10a880b6d8ccbf8b537b46183812758023e47eb1aaa3fS3Bucket0317CB85",
              },
              "/",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameters206e0798c6b784b3d5d10a880b6d8ccbf8b537b46183812758023e47eb1aaa3fS3VersionKey4A892419",
                      },
                    ],
                  },
                ],
              },
              Object {
                "Fn::Select": Array [
                  1,
                  Object {
                    "Fn::Split": Array [
                      "||",
                      Object {
                        "Ref": "AssetParameters206e0798c6b784b3d5d10a880b6d8ccbf8b537b46183812758023e47eb1aaa3fS3VersionKey4A892419",
                      },
                    ],
                  },
                ],
              },
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
      "UpdateReplacePolicy": "Delete",
    },
  },
}
`;
